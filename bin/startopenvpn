#!/bin/bash

#
# Run the OpenVPN server normally
#

if [ "$DEBUG" == "1" ]; then
  set -x
fi

set -e

echo "Waiting for $OPENVPN/ovpn_env.sh to exist..."

until [ -e "$OPENVPN/ovpn_env.sh" ]; do
  sleep 1
done

source "$OPENVPN/ovpn_env.sh"

echo "Waiting for /etc/openvpn/crl.pem, /etc/openvpn/pki/issued/$OVPN_CN.crt and /etc/openvpn/pki/private/$OVPN_CN.key to exist..."

until [[ -e "/etc/openvpn/crl.pem" && -e "/etc/openvpn/pki/issued/$OVPN_CN.crt" && -e "/etc/openvpn/pki/private/$OVPN_CN.key" ]]; do
  sleep 1
done

mkdir -p /dev/net
if [ ! -c /dev/net/tun ]; then
    mknod /dev/net/tun c 10 200
fi

if [ ! -d "$OPENVPN/ccd" ]; then
    mkdir -p /etc/openvpn/ccd
fi

if [ ! -f /etc/openvpn/vars ]; then
    touch /etc/openvpn/vars
fi

# Setup NAT forwarding if requested
if [ "$OVPN_DEFROUTE" != "0" ] || [ "$OVPN_NAT" == "1" ] ; then
    iptables -t nat -C POSTROUTING -s $OVPN_SERVER -o eth0 -j MASQUERADE || {
      iptables -t nat -A POSTROUTING -s $OVPN_SERVER -o eth0 -j MASQUERADE
    }
    for i in "${OVPN_ROUTES[@]}"; do
        iptables -t nat -C POSTROUTING -s "$i" -o eth0 -j MASQUERADE || {
          iptables -t nat -A POSTROUTING -s "$i" -o eth0 -j MASQUERADE
        }
    done
fi

conf="$OPENVPN/openvpn.conf"

exec openvpn --config "$conf"
